// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file typesImplCdrAux.hpp
 * This source file contains some definitions of CDR related functions.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef FAST_DDS_GENERATED__TYPESIMPLCDRAUX_HPP
#define FAST_DDS_GENERATED__TYPESIMPLCDRAUX_HPP

#include "typesImpl.hpp"

constexpr uint32_t NodeStatusImpl_max_cdr_typesize {548UL};
constexpr uint32_t NodeStatusImpl_max_key_cdr_typesize {272UL};

constexpr uint32_t AppRequirementsImpl_max_cdr_typesize {28UL};
constexpr uint32_t AppRequirementsImpl_max_key_cdr_typesize {12UL};

constexpr uint32_t MLModelImpl_max_cdr_typesize {1080UL};
constexpr uint32_t MLModelImpl_max_key_cdr_typesize {12UL};

constexpr uint32_t MLModelMetadataImpl_max_cdr_typesize {36UL};
constexpr uint32_t MLModelMetadataImpl_max_key_cdr_typesize {12UL};

constexpr uint32_t HWConstraintsImpl_max_cdr_typesize {24UL};
constexpr uint32_t HWConstraintsImpl_max_key_cdr_typesize {12UL};

constexpr uint32_t CO2FootprintImpl_max_cdr_typesize {48UL};
constexpr uint32_t CO2FootprintImpl_max_key_cdr_typesize {12UL};

constexpr uint32_t NodeControlImpl_max_cdr_typesize {544UL};
constexpr uint32_t NodeControlImpl_max_key_cdr_typesize {272UL};




constexpr uint32_t UserInputImpl_max_cdr_typesize {1368UL};
constexpr uint32_t UserInputImpl_max_key_cdr_typesize {12UL};

constexpr uint32_t HWResourceImpl_max_cdr_typesize {312UL};
constexpr uint32_t HWResourceImpl_max_key_cdr_typesize {12UL};


constexpr uint32_t TaskIdImpl_max_cdr_typesize {12UL};
constexpr uint32_t TaskIdImpl_max_key_cdr_typesize {0UL};


namespace eprosima {
namespace fastcdr {

class Cdr;
class CdrSizeCalculator;

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const TaskIdImpl& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const NodeStatusImpl& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const NodeControlImpl& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const UserInputImpl& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MLModelMetadataImpl& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const AppRequirementsImpl& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const HWConstraintsImpl& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MLModelImpl& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const HWResourceImpl& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const CO2FootprintImpl& data);


} // namespace fastcdr
} // namespace eprosima

#endif // FAST_DDS_GENERATED__TYPESIMPLCDRAUX_HPP

